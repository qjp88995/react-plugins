{"version":3,"sources":["components/Book.module.scss","components/Carousel.js","components/Xlsx2json.js","components/ArtTemplate.js","components/Docx.js","components/Jszip.js","components/DocxPreviewer.js","components/Book.js","App.js","serviceWorker.js","index.js","components/Carousel.module.scss","components/Xlsx2json.module.scss","App.module.scss"],"names":["module","exports","Carousel","props","width","height","className","styles","carousel","style","container","item","display","backgroundColor","tableKeys","Xlsx2json","useState","url","setUrl","contentColSpan","setContentColSpan","data","setData","tableData","setTableData","indexType","setIndexType","itemType","setItemType","major","setMajor","fetchFile","a","fetch","then","res","ok","Error","arrayBuffer","ab","Uint8Array","wb","XLSX","read","type","json","utils","sheet_to_json","Sheets","SheetNames","defval","firstRow","shift","Object","keys","filter","test","length","onClick","renderTableData","index_type","includes","item_type","majors","map","index","arr","row","current","newRow","splice","text","rowSpan","colSpan","_","cell","console","log","form","value","onChange","e","target","trim","marginLeft","table","forEach","datum","tableKey","childKeys","key","sort","childrenIsBlank","every","code","push","afterKeys","k","beforeKeys","score_options","split","score_majors","reject_score_codes","htmlFor","name","id","Array","isArray","it","ind","ArtTemplate","setText","output","setOutput","verticalAlign","cols","rows","JSON","parse","str","render","border","minHeight","padding","whiteSpace","Docx","preventDefault","doc","Document","addSection","size","orientation","PageOrientation","LANDSCAPE","children","fill","Paragraph","properties","column","count","Packer","toBlob","blob","saveAs","Jszip","file","setFile","findStr","setFindStr","replaceStr","setReplaceStr","fileInput","createRef","exportDocx","replaceContent","saveName","JSZip","loadAsync","zip","async","generateAsync","Date","now","onFileChange","files","error","ref","accept","click","content","replace","DocxPreviewer","html","setHtml","marginTop","reader","FileReader","readAsArrayBuffer","onload","mammoth","convertToHtml","result","messages","done","dangerouslySetInnerHTML","__html","textAlign","Book","wrapper","book","src","alt","Math","ceil","href","Li","to","label","activeOnlyWhenExact","match","useRouteMatch","path","exact","active","App","routes","title","component","process","ROUTER_PATH","app","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1c6983c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Book_wrapper__1sU5g\",\"btn\":\"Book_btn__WJEDP\",\"book\":\"Book_book__1yqFR\",\"book-hover\":\"Book_book-hover__YpXhy\",\"book-front\":\"Book_book-front__fZfj8\",\"book-expand\":\"Book_book-expand__2k63v\",\"book-page\":\"Book_book-page__34sUo\",\"book-page-item\":\"Book_book-page-item__hCMeB\",\"book-back\":\"Book_book-back__18923\",\"book-spine\":\"Book_book-spine__1Ahkb\"};","import React from 'react';\r\nimport styles from './Carousel.module.scss';\r\n\r\nfunction Carousel(props) {\r\n    const { width = '100%', height = 300 } = props;\r\n    return (\r\n        <div>\r\n            <h2>轮播图</h2>\r\n            <div className={styles.carousel} style={{ width, height }}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.item} style={{ display: 'block', backgroundColor: 'green' }}/>\r\n                    <div className={styles.item} style={{ display: 'none', backgroundColor: 'blue' }}/>\r\n                    <div className={styles.item} style={{ display: 'none', backgroundColor: 'red' }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Carousel;\r\n","import React, { useState } from 'react';\r\nimport XLSX from 'xlsx';\r\nimport styles from './Xlsx2json.module.scss';\r\n\r\nconst tableKeys = ['index_type', 'item_type', 'majors', 'code', 'content', 'evaluation_score', 'score_code'];\r\n\r\nconst Xlsx2json = () => {\r\n    const [url, setUrl] = useState('/test.xlsx');\r\n    const [contentColSpan, setContentColSpan] = useState(1);\r\n    const [data, setData] = useState([]);\r\n    const [tableData, setTableData] = useState([]);\r\n    const [indexType, setIndexType] = useState('');\r\n    const [itemType, setItemType] = useState('');\r\n    const [major, setMajor] = useState('');\r\n\r\n    function data2table() {\r\n        const table = [];\r\n        const current = {\r\n            majors: '',\r\n            index_type: '',\r\n            item_type: '',\r\n        };\r\n        data.forEach((datum, index) => {\r\n            const row = [];\r\n            tableKeys.forEach(tableKey => {\r\n                switch (tableKey) {\r\n                    case 'content':\r\n                        const childKeys = Object.keys(datum).filter(key => /^content_\\d+$/.test(key)).sort();\r\n                        const childrenIsBlank = childKeys.every(key => !datum[key]);\r\n                        if (datum[tableKey]) {\r\n                            const cell = { text: datum[tableKey], rowSpan: 1, colSpan: 1, type: 'content' };\r\n                            if (childrenIsBlank) cell.colSpan = contentColSpan;\r\n                            while (data[index + cell.rowSpan] && !data[index + cell.rowSpan].code) {\r\n                                cell.rowSpan += 1;\r\n                            }\r\n                            row.push(cell);\r\n                        }\r\n                        if (!childrenIsBlank) {\r\n                            childKeys.forEach(key => {\r\n                                if (datum[key]) {\r\n                                    const cell = { text: datum[key], rowSpan: 1, colSpan: 1, type: 'content_child' };\r\n                                    const afterKeys = childKeys.filter(k => k > key);\r\n                                    const afterIsBlank = afterKeys.every(k => !datum[k]);\r\n                                    if (afterIsBlank) cell.colSpan += afterKeys.length;\r\n                                    const beforeKeys = childKeys.filter(k => k <= key);\r\n                                    while (data[index + cell.rowSpan] && !data[index + cell.rowSpan].code && beforeKeys.every(item => !data[index + cell.rowSpan][item])) {\r\n                                        cell.rowSpan += 1;\r\n                                    }\r\n                                    row.push(cell);\r\n                                }\r\n                            });\r\n                        }\r\n                        break;\r\n                    default:\r\n                        const cell = { text: datum[tableKey], rowSpan: 1, colSpan: 1, type: tableKey };\r\n                        if (datum[tableKey]) {\r\n                            if (tableKey === 'code') {\r\n                                current.majors = datum.majors || '';\r\n                            }\r\n                            if (tableKey === 'index_type') {\r\n                                current.index_type = datum.index_type || '';\r\n                            }\r\n                            if (tableKey === 'item_type') {\r\n                                current.item_type = datum.item_type || '';\r\n                            }\r\n                            if (tableKey === 'majors') {\r\n                                while (data[index + cell.rowSpan] && !data[index + cell.rowSpan].code) {\r\n                                    cell.rowSpan += 1;\r\n                                }\r\n                            } else {\r\n                                while (data[index + cell.rowSpan] && !data[index + cell.rowSpan][tableKey]) {\r\n                                    cell.rowSpan += 1;\r\n                                }\r\n                            }\r\n                            if (tableKey === 'score_code') {\r\n                                cell.score_options = datum['score_options'] ? datum['score_options'].split(',') : [];\r\n                                cell.score_majors = datum['score_majors'] ? datum['score_majors'].split(',') : [];\r\n                                cell.reject_score_codes = datum['reject_score_codes'] ? datum['reject_score_codes'].split(',') : [];\r\n                            }\r\n                            row.push(cell);\r\n                        } else {\r\n                            if (tableKey === 'majors' && datum.code) {\r\n                                while (data[index + cell.rowSpan] && !data[index + cell.rowSpan].code) {\r\n                                    cell.rowSpan += 1;\r\n                                }\r\n                                row.push(cell);\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n            });\r\n            table.push({ row, ...current });\r\n        });\r\n        console.log(table);\r\n        setTableData(table);\r\n    }\r\n    \r\n    const fetchFile = async url => {\r\n        return await fetch(url).then(function (res) {\r\n            if (!res.ok) throw new Error(\"fetch failed\");\r\n            return res.arrayBuffer();\r\n        }).then(function async (ab) {\r\n            const data = new Uint8Array(ab);\r\n            const wb = XLSX.read(data, { type: \"array\" });\r\n            const json = XLSX.utils.sheet_to_json(wb.Sheets[wb.SheetNames[0]], { defval: null });\r\n            const firstRow = json.shift();\r\n            const contentColSpan = Object.keys(firstRow).filter(item => /^content/.test(item)).length;\r\n            return {\r\n                contentColSpan,\r\n                data: json,\r\n            };\r\n        });\r\n    }\r\n\r\n    const onClick = async () => {\r\n        if (url) {\r\n            const { contentColSpan, data } = await fetchFile(url);\r\n            setContentColSpan(contentColSpan);\r\n            setData(data);\r\n        }\r\n    }\r\n\r\n    const renderTableData = tableData\r\n    .filter(item => item.index_type.includes(indexType) && item.item_type.includes(itemType) && item.majors.includes(major))\r\n    .map(({ row, ...current }, index, arr) => {\r\n        const newRow = [ ...row ];\r\n        if (index === 0 || arr[index - 1].index_type !== current.index_type) {\r\n            if (row[0].type !== 'index_type') {\r\n                newRow.splice(0, 0, { text: current.index_type, rowSpan: 1, colSpan: 1, type: 'index_type' });\r\n            }\r\n        }\r\n        if (index === 0 || arr[index - 1].index_type !== current.index_type || arr[index - 1].item_type !== current.item_type) {\r\n            if (newRow[0].type === 'index_type' && newRow[1].type !== 'item_type') {\r\n                newRow.splice(1, 0, { text: current.item_type, rowSpan: 1, colSpan: 1, type: 'item_type' });\r\n            } else if (row[0].type !== 'index_type' && row[0].type !== 'item_type') {\r\n                newRow.splice(0, 0, { text: current.item_type, rowSpan: 1, colSpan: 1, type: 'item_type' });\r\n            }\r\n        }\r\n        return { row: newRow, ...current };\r\n    })\r\n    .map(({ row, ...current }, _, arr) => {\r\n        const newRow = row.map(cell => {\r\n            if (cell.type === 'index_type') {\r\n                return {\r\n                    ...cell,\r\n                    rowSpan: arr.filter(item => item.index_type.includes(current.index_type)).length,\r\n                }\r\n            }\r\n            if (cell.type === 'item_type') {\r\n                return {\r\n                    ...cell,\r\n                    rowSpan: arr.filter(item => item.index_type.includes(current.index_type) && item.item_type.includes(current.item_type)).length,\r\n                }\r\n            }\r\n            return cell;\r\n        });\r\n        return { row: newRow, ...current };\r\n    });\r\n\r\n    console.log(renderTableData);\r\n\r\n    return (\r\n        <div>\r\n            <h2>xlsx文件转json</h2>\r\n            <div className={styles.form}>\r\n                <input type=\"text\" value={url} onChange={e => setUrl(e.target.value.trim())} />\r\n                <button onClick={onClick} style={{ marginLeft: 10 }}>xlsx转换</button>\r\n                <button onClick={data2table} style={{ marginLeft: 10 }}>table转换</button>\r\n            </div>\r\n            <div className={styles.filter}>\r\n                <label htmlFor=\"index_type\" style={{ marginLeft: 10 }}>指标类别</label>\r\n                <select name=\"index_type\" id=\"index_type\" value={indexType} onChange={e => setIndexType(e.target.value)} style={{ marginLeft: 10 }}>\r\n                    <option value=\"\">全部</option>\r\n                    <option value=\"安全耐久\">安全耐久</option>\r\n                    <option value=\"健康舒适\">健康舒适</option>\r\n                    <option value=\"生活便利\">生活便利</option>\r\n                    <option value=\"资源节约\">资源节约</option>\r\n                    <option value=\"环境宜居\">环境宜居</option>\r\n                    <option value=\"提高创新\">提高创新</option>\r\n                </select>\r\n                <label htmlFor=\"item_type\" style={{ marginLeft: 10 }}>子项</label>\r\n                <select name=\"item_type\" id=\"item_type\" value={itemType} onChange={e => setItemType(e.target.value)} style={{ marginLeft: 10 }}>\r\n                    <option value=\"\">全部</option>\r\n                    <option value=\"控制项\">控制项</option>\r\n                    <option value=\"评分项\">评分项</option>\r\n                </select>\r\n                <label htmlFor=\"majors\" style={{ marginLeft: 10 }}>专业</label>\r\n                <select name=\"majors\" id=\"majors\" value={major} onChange={e => setMajor(e.target.value)} style={{ marginLeft: 10 }}>\r\n                    <option value=\"\">全部</option>\r\n                    <option value=\"建筑\">建筑</option>\r\n                    <option value=\"结构\">结构</option>\r\n                    <option value=\"给排水\">给排水</option>\r\n                    <option value=\"暖通\">暖通</option>\r\n                    <option value=\"电气\">电气</option>\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <table className={styles.table}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>指标类别</th>\r\n                            <th>子项</th>\r\n                            <th>条文专业</th>\r\n                            <th>条文编号</th>\r\n                            <th>条文内容</th>\r\n                            <th colSpan={contentColSpan - 1}>评价内容</th>\r\n                            <th>评价档次</th>\r\n                            <th>分值编号</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {Array.isArray(renderTableData) && renderTableData.map((item, index) => (\r\n                            <tr key={index}>\r\n                                {item.row.map((it, ind) => (\r\n                                    <td key={ind} rowSpan={it.rowSpan} colSpan={it.colSpan}>{it.text}</td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Xlsx2json;\r\n","import React, { useState } from 'react';\r\nimport { render } from \"art-template/lib/template-web\"\r\n\r\nconst ArtTemplate = () => {\r\n    const [text, setText] = useState('My name is {{name}}');\r\n    const [data, setData] = useState('{ \"name\": \"Json\" }');\r\n    const [output, setOutput] = useState('');\r\n    \r\n    const onClick = e => {\r\n        const json = JSON.parse(data);\r\n        const str = render(text, json);\r\n        console.log(json);\r\n        setOutput(str);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>art-template模板替换</h2>\r\n            <p>\r\n                <span style={{ verticalAlign: 'top' }}>模板：</span>\r\n                <textarea style={{ verticalAlign: 'top' }} cols=\"30\" rows=\"10\" value={text} onChange={e => setText(e.target.value)} />\r\n            </p>\r\n            <p>\r\n                <span style={{ verticalAlign: 'top' }}>数据：</span>\r\n                <textarea style={{ verticalAlign: 'top' }} cols=\"30\" rows=\"10\" value={data} onChange={e => setData(e.target.value)} />\r\n            </p>\r\n            <p>\r\n                <button onClick={onClick}>输出</button>\r\n            </p>\r\n            <p style={{ border: '1px solid #ccc', minHeight: 100, padding: 20, whiteSpace: 'pre-wrap' }}>\r\n                {output}\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ArtTemplate;\r\n","import React from 'react';\r\nimport { Document, Packer, PageOrientation, Paragraph } from 'docx';\r\nimport { saveAs } from 'file-saver';\r\n\r\nconst Docx = () => {\r\n    const onClick = e => {\r\n        e.preventDefault();\r\n        const doc = new Document();\r\n        doc.addSection({\r\n            size: {\r\n                width: '297mm',\r\n                height: '420mm',\r\n                orientation: PageOrientation.LANDSCAPE,\r\n            },\r\n            children: new Array(100).fill(new Paragraph('这是一个段落！')),\r\n            properties: {\r\n                column: {\r\n                    count: 2,\r\n                },\r\n            },\r\n        });\r\n        Packer.toBlob(doc).then(blob => {\r\n            saveAs(blob, '测试文档.docx');\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>docx插件生成.docx文件</h2>\r\n            <p>\r\n                <button onClick={onClick}>输出docx</button>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Docx;\r\n","import React, { createRef, useState } from 'react';\r\nimport JSZip from 'jszip';\r\n// import { getBinaryContent } from 'jszip-utils';\r\nimport { saveAs } from 'file-saver';\r\n\r\nconst Jszip = () => {\r\n    const [file, setFile] = useState();\r\n    const [findStr, setFindStr] = useState('');\r\n    const [replaceStr, setReplaceStr] = useState('');\r\n    const fileInput = createRef();\r\n\r\n    const exportDocx = async ({ file, replaceContent, saveName }) => {\r\n        const zip = await JSZip.loadAsync(file);\r\n        const doc = await zip.file('word/document.xml').async('text');\r\n        zip.file('word/document.xml', replaceContent ? replaceContent(doc) : doc);\r\n        const blob = await zip.generateAsync({ type: 'blob' });\r\n        saveAs(blob, saveName || `${Date.now()}.docx`);\r\n    }\r\n\r\n    const onClickUpload = e => {\r\n        e.preventDefault();\r\n        fileInput.current.click();\r\n    }\r\n\r\n    const onClickExport = e => {\r\n        e.preventDefault();\r\n        if (file) {\r\n            const replaceContent = content => content && findStr ? content.replace(findStr, replaceStr || '') : content\r\n            exportDocx({\r\n                file,\r\n                replaceContent,\r\n                saveName: '测试.docx',\r\n            });\r\n        }\r\n    }\r\n\r\n    const onFileChange = async e => {\r\n        e.preventDefault();\r\n        if (e.target.value && e.target.files && e.target.files[0]) {\r\n            if (e.target.files[0].type !== 'application/vnd.openxmlformats-officedocument.wordprocessingml.document') {\r\n               return console.error('文件类型错误，仅支持.docx文件');\r\n            }\r\n            console.log(e.target.files[0]);\r\n            setFile(e.target.files[0]);\r\n        }\r\n        e.target.value = '';\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>docx文件内容替换</h2>\r\n            <p>上传一个docx文件，将文件中的内容进行替换，然后导出新的docx文件</p>\r\n            <p>\r\n                <input ref={fileInput} style={{ display: 'none' }} type=\"file\" accept=\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" onChange={onFileChange} />\r\n                <button onClick={onClickUpload}>上传文件</button>\r\n                <span>{file && file.name}</span>\r\n            </p>\r\n            <p>\r\n                查找：\r\n                <input type=\"text\" value={findStr} onChange={e => setFindStr(e.target.value)} />\r\n            </p>\r\n            <p>\r\n                替换：\r\n                <input type=\"text\" value={replaceStr} onChange={e => setReplaceStr(e.target.value)} />\r\n            </p>\r\n            <p>\r\n                <button onClick={onClickExport}>导出word</button>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Jszip;\r\n","import React, { useState, createRef } from 'react';\r\n// import { getBinaryContent } from 'jszip-utils';\r\nimport mammoth from 'mammoth';\r\n\r\nconst DocxPreviewer = () => {\r\n    const [html, setHtml] = useState('');\r\n    const [file, setFile] = useState();\r\n    const fileInput = createRef();\r\n    \r\n    const onClickUpload = e => {\r\n        e.preventDefault();\r\n        fileInput.current.click();\r\n    }\r\n\r\n    const onClickPreview = e => {\r\n        e.preventDefault();\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.readAsArrayBuffer(file);\r\n            reader.onload = e => {\r\n                mammoth.convertToHtml({ arrayBuffer: e.target.result }).then(function(result) {\r\n                    console.log('html: ', result.value);\r\n                    console.log('messages: ', result.messages);\r\n                    setHtml(result.value);\r\n                }).done();\r\n            };\r\n        }\r\n    }\r\n\r\n    const onFileChange = async e => {\r\n        e.preventDefault();\r\n        if (e.target.value && e.target.files && e.target.files[0]) {\r\n            if (e.target.files[0].type !== 'application/vnd.openxmlformats-officedocument.wordprocessingml.document') {\r\n               return console.error('文件类型错误，仅支持.docx文件');\r\n            }\r\n            console.log(e.target.files[0]);\r\n            setFile(e.target.files[0]);\r\n        }\r\n        e.target.value = '';\r\n    }\r\n\r\n    return (\r\n        <div style={{ marginTop: 20 }}>\r\n            <h2>docx文件预览</h2>\r\n            <p>\r\n                <input ref={fileInput} style={{ display: 'none' }} type=\"file\" accept=\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" onChange={onFileChange} />\r\n                <button onClick={onClickUpload}>上传文件</button>\r\n                <span>{file && file.name}</span>\r\n            </p>\r\n            <p>\r\n                <button onClick={onClickPreview}>预览docx</button>\r\n            </p>\r\n            <div dangerouslySetInnerHTML={{ __html: html }} style={{ padding: 20, minHeight: 100, textAlign: 'left', border: '1px solid #ccc' }}></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DocxPreviewer;\r\n","import React from 'react';\r\nimport styles from './Book.module.scss';\r\n\r\nconst Book = props => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={`${styles.book} ${styles['book-expand']}`}>\r\n        <div className={styles['book-front']}>\r\n          <img src=\"/book-test.png\" alt=\"\" />\r\n          <div />\r\n        </div>\r\n        <div className={styles['book-page']}>\r\n          {new Array(5).fill(null).map((_, index, arr) => (\r\n            <div key={index} className={styles['book-page-item']}>\r\n              {index === (Math.ceil(arr.length / 2)) && (\r\n                <a className={styles[\"btn\"]} href=\".#\">点击下载</a>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className={styles['book-back']}>\r\n          <img src=\"/book-test.png\" alt=\"\" />\r\n        </div>\r\n        <div className={styles['book-spine']} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Book;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect, useRouteMatch } from 'react-router-dom';\nimport styles from './App.module.scss';\nimport Carousel from './components/Carousel';\nimport Xlsx2json from './components/Xlsx2json';\nimport ArtTemplate from './components/ArtTemplate';\nimport Docx from './components/Docx';\nimport Jszip from './components/Jszip';\nimport DocxPreviewer from './components/DocxPreviewer';\nimport Book from './components/Book';\n\nconst Li = ({ to, label, activeOnlyWhenExact }) => {\n  const match = useRouteMatch({\n    path: to,\n    exact: activeOnlyWhenExact,\n  });\n\n  return (\n    <li className={match ? styles.active : ''}>\n      <Link to={to}>{label}</Link>\n    </li>\n  );\n}\n\nfunction App() {\n  const routes = [\n    { path: '/carousel', title: 'Carousel', component: Carousel },\n    { path: '/xlsx2json', title: 'Xlsx2json', component: Xlsx2json },\n    { path: '/art-template', title: 'ArtTemplate', component: ArtTemplate },\n    { path: '/docx', title: 'Docx', component: Docx },\n    { path: '/jszip', title: 'Jszip', component: Jszip },\n    { path: '/docx-previewer', title: 'DocxPreviewer', component: DocxPreviewer },\n    { path: '/book', title: 'Book', component: Book },\n  ];\n  return (\n    <Router path={process.env.ROUTER_PATH || '/'}>\n      <div className={styles.app}>\n        <nav>\n          <ul>\n            {routes.map(item => (\n              <Li key={item.path} to={item.path} label={item.title} />\n            ))}\n          </ul>\n        </nav>\n        <main>\n          <Switch>\n            {routes.map(item => (\n              <Route key={item.path} path={item.path}>\n                <item.component />\n              </Route>\n            ))}\n            <Route path=\"/\" exact render={() => (<Redirect to={routes[0].path} />)} />\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"carousel\":\"Carousel_carousel__3iif3\",\"container\":\"Carousel_container__il8GN\",\"item\":\"Carousel_item__XTzEJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Xlsx2json_form__Ys5_v\",\"filter\":\"Xlsx2json_filter__2KUj7\",\"table\":\"Xlsx2json_table__19eEY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\",\"active\":\"App_active__2jQ78\"};"],"sourceRoot":""}